h1 Information for presentation: #{@presentation.name}

div#tabs
	ul
		li: a href="#metadata" Metadata
		li: a href="#tickets" Tickets
		- if @presentation.displays.present?
			li: a href="#displays" Displays
		li: a href="#authorized_users" Authorized users
		- if Display.can_override(current_user).present?
			li: a href="#overrides" Overrides
	
	div#metadata
		= render @presentation
	
	- if @presentation.displays.present?
		div#displays
			h2 Displays showing this presentation
			p This presentation is being shown on following displays:
			ul
				- @presentation.displays.each do |d|
					li = link_to d.name, display_path(d)

	= tickets_partial(@presentation)
	= authorized_users(@presentation)

	- if Display.can_override(current_user).present?
		div#overrides
			h2 Add to override
			p 
				| Add all slides in this presentation to override queue on a display.
				|  Will use the order of slides in this presentation and will add multiple copies
				|  of a slide if it's included multiple times in this presentation.
			= form_for :override, :url => {:action => :add_to_override, :id => @presentation.id} do |f|
				= f.label :display_id, 'Display:' 
				= f.select :display_id, 
					options_for_select(Display.can_override(current_user).collect {|g| [ g.name, g.id ] })
				= f.label :duration, 'Duration of each slide (sec):'
				= f.text_field :duration, value: 60, size: 4, class: 'duration_spinner'
				= f.submit 'Add'

- @presentation.groups.each do |group|
	table.compact_slidelist
		tr: th #{group_link_tag(group.master_group)}
		tr
			td
				= render partial: 'slides/slide', collection: group.slides.published

= content_for :navigation do
	= link_to 'Preview', :action => :preview, :id => @presentation.id
	- if @presentation.can_edit? current_user
		=link_to 'Edit', edit_presentation_path(@presentation)
	